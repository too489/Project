package Hw1;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;
import java.util.StringTokenizer;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.KeyValueTextInputFormat;
import org.apache.hadoop.mapred.*;
import org.apache.hadoop.mapred.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.*;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;

import com.mongodb.hadoop.MongoConfig;
import com.mongodb.hadoop.MongoOutputFormat; 
import com.mongodb.hadoop.io.BSONWritable; 
import com.mongodb.hadoop.util.MongoConfigUtil;
import com.mongodb.hadoop.util.MongoTool; 

public class Run_test extends MongoTool  {
	public static final String[] Most_Peo = new String[5];
	public static final String[] Most_Loc = new String[5];
	public static final ArrayList array_key = new ArrayList();
	public static final ArrayList array_value = new ArrayList();
	
 
  public static void main(String[] args)throws Exception{

    Configuration conf = new Configuration();
    Job job = Job.getInstance(conf, "Run_test");
    job.setJarByClass(Run_test.class);
    job.setMapperClass(Most_Call_People_Mapper.class);
    job.setReducerClass(Most_Call_People_Reducer.class);
    job.setOutputKeyClass(Text.class);
    job.setOutputValueClass(LongWritable.class);
    FileInputFormat.addInputPath(job, new Path(args[0]));//여기서 입력값 조절hadoop jar '/home/s/hadoop-ex/Hadoop_hw1/src/Hw1/Hw1.jar' Hw1.Run_test /Hw1/Input /Hw1/Output
    FileOutputFormat.setOutputPath(job, new Path(args[1]));
    job.waitForCompletion(true);
    System.out.println("1작업 종");
//    for (String var:Most_Peo) {
//    	System.out.println(var);
//    	System.out.println("출력되는지보");
//    }
//    
    Job job2 = Job.getInstance(conf, "Run_test");
    job2.setJarByClass(Run_test.class);
    job2.setMapperClass(Most_Call_Location_Mapper.class);
    job2.setReducerClass(Most_Call_Location_Reducer.class);
    job2.setOutputKeyClass(Text.class);
    job2.setOutputValueClass(LongWritable.class);
    FileInputFormat.addInputPath(job2,new Path(args[0]));
    FileOutputFormat.setOutputPath(job2, new Path(args[2]));
    job2.waitForCompletion(true);
    
    //ToolRunner.run(new MongoConnector(args[0]), args);
//    JobConf Result_conf = new JobConf(Run_test.class);
    

//    MongoConfigUtil.setOutputURI(Result_conf, mongoDbPath);
//    Result_conf.set("mongo.output.uri", mongoDbPath);
//    Result_conf.setJobName("timespent"); 
//    Result_conf.setMapperClass(Hw1.Result_Mapper.class);
//    Result_conf.setReducerClass(Result_Reducer.class);
//    Result_conf.setOutputKeyClass(Text.class);
//    Result_conf.setOutputValueClass(LongWritable.class);
//    Result_conf.setInputFormat(TextInputFormat.class);
//    Result_conf.setOutputFormat(com.mongodb.hadoop.mapred.MongoOutputFormat.class);
//    org.apache.hadoop.mapred.FileInputFormat.setInputPaths(Result_conf, new Path(args[0]));
//    JobClient.runJob(Result_conf);
//    
    ListIterator itr_key = array_key.listIterator();
    ListIterator itr_value = array_value.listIterator();
    while(itr_key.hasNext())
    	System.out.println(itr_key.next().toString() + "("+itr_value.next().toString()+")" );

    }
  public Run_test(){
	  String mongoDbPath = "mongodb://root:1883@localhost/Hw1.save";
	    Configuration conf = new Configuration();
	    MongoConfig config = new MongoConfig(conf);
	    setConf(conf);
	    config.setInputFormat(TextInputFormat.class);
	    config.setInputURI(mongoDbPath);
	    config.setMapper(Result_Mapper.class);
	    config.setReducer(Result_Reducer.class);
	    config.setOutputURI(mongoDbPath);
	    config.setOutputFormat(MongoOutputFormat.class);
  }
  }
}
